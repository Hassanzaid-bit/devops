pipeline {
    agent any 
    stages {
        stage('Static Analysis') {
            steps {
                echo 'Run the static analysis to the code' 
            }
        }
        stage('Compile') {
            steps {
                echo 'Compile the source code' 
            }
        }
        stage('Security Check') {
            steps {
                echo 'Run the security check against the application' 
            }
        }
        stage('Run Unit Tests') {
            steps {
                echo 'Run unit tests from the source code' 
            }
        }
        stage('Run Integration Tests') {
            steps {
                echo 'Run only crucial integration tests from the source code' 
            }
        }
        stage('Publish Artifacts') {
            steps {
                echo 'Save the assemblies generated from the compilation' 
            }
        }
        stage('Send Slack Notification') {
            steps {
                script {
                    // Get the user who pushed the code (Windows Command Prompt)
                    def gitUser = bat(script: 'git log -1 --pretty=format:"%an"')

                    // Get the commit message (Windows Command Prompt)
                    def commitMessage = bat(script: 'git log -1 --pretty=format:"%s"')

                    // Define the Slack message
                    def slackMessage = "Build pipeline completed successfully.\nPushed by: ${gitUser}\nCommit Message: ${commitMessage}"

                    // Send the Slack notification
                    slackSend(color: '#36a64f', message: slackMessage, channel: '#general')
                }
            }
        }
    }
}
